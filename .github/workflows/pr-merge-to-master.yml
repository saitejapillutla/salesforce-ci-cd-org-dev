# Unique name for this workflow
name: Quick Deploy using Job ID

# Definition when the workflow should run
on:

  push:
    branches: [ devolopment ]

jobs:
  initial-setup:
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout source code'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get job ID file
        run: |
            git pull origin
            value=$(cat job_id.txt)
            echo The result is $value

      - name: Deploy
        shell: bash
        run: |
             echo "Deploying with job ID: $value"
             
      - name: 'Check aartifact'
        run: echo Checkout source code




      - name: 'Download job ID artifact'
        uses: actions/download-artifact@v4
      - name: Get job ID file
        id: get-job-id
        run: |
            git pull
            value=$(cat job_id.txt)
            echo "JobID=$value" >> $GITHUB_ENV
            echo The result is $value
      - name: Deploy
        shell: bash
        run: |
            echo "Deploying with job ID: ${{env.JobID}}"



      - name: 'Install Salesforce CLI'
        run: |
            wget https://developer.salesforce.com/media/salesforce-cli/sfdx/channels/stable/sfdx-linux-x64.tar.xz
            mkdir ~/sfdx
            tar xJf sfdx-linux-x64.tar.xz -C ~/sfdx --strip-components 1
            echo "$HOME/sfdx/bin" >> $GITHUB_PATH
            ~/sfdx/bin/sfdx version

      - name: 'Installing java'
        run: |
          sudo apt-get update
          sudo apt install default-jdk


      - name: 'Populate auth file with SFDX_URL secret of integration org'
        shell: bash
        run: |
             echo ${{ secrets.SFDX_INTEGRATION_URL}} > ./SFDX_INTEGRATION_URL.txt

            # Authenticate to org using the URL stored in the text file
      - name: 'Authenticate to Integration Org'
        run: sfdx auth:sfdxurl:store -f ./SFDX_INTEGRATION_URL.txt -s -a integration





      - name: 'Quick Deploy starting'      
        run: |
            sfdx force:source:deploy -q ${{env.JobID}} --verbose
            
      - name: Set Git identity
        run: |
             git config --global user.email "github-actions-bot@github.com"
             git config --global user.name "GitHub Actions"

      - name: 'Clean up post deployment'
        run: |
            cd force-app/main/default
            shopt -s extglob
            rm -rf !(.gitkeep)
            git add.
            git commit -m "Clean up post deployment"
            git push origin

  # step - name: 'clean up post deployment' this method will clean up files in force-app\main\default\classes\UltimateClass.cls-meta.xmlforce-app\main\default\ in default folder and make a commit

  #     - name: 'Populate auth file with SFDX_URL secret of integration org'
  #       shell: bash
  #       run: |
  #            echo ${{ secrets.SFDX_INTEGRATION_URL}} > ./SFDX_INTEGRATION_URL.txt
  #       # Authenticate to org using the URL stored in the text file
  #     - name: 'Authenticate to Integration Org'
  #       run: |
  #            sfdx auth:sfdxurl:store -f ./SFDX_INTEGRATION_URL.txt -s -a integration
  #            echo NEW DEPLYMENT ID ${{ needs.validate-deployment-on-develop-org.outputs.SFDX_JobID }}
  #            echo APEX TESTS ${{env.APEX_TESTS}}

  # quick-deploy:
  #   runs-on: ubuntu-latest
  #   needs: initial-setup
  #   if: needs.validate-deployment-on-develop-org.outputs.SFDX_JobID != ''
  #   steps:
  #     - name: 'Quick Deploy'
  #       run: |
  #         sfdx force:source:quickdeploy -i ${{ needs.validate-deployment-on-develop-org.outputs.SFDX_JobID }} --verbose

